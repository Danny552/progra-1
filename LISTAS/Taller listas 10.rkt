#lang racket
(define (registrar posicion lista-final)
  (display "Insert the word: ")
  (define palabra (read))
  (newline)
  (display "Insert the first synonim: ")
  (define sinon1 (read))
  (newline)
  (display "Insert the second synonim: ")
  (define sinon2 (read))
  (newline)
  (display "Insert the third synonim: ")
  (define sinon3 (read))
  (set! lista-final (append lista-final (list(list palabra sinon1 sinon2 sinon3))))
  (interfaz posicion lista-final)
  )
(define (buscar-sinon palabra lista)
  (define (buscar codigo estudiante)
    (cond
      ((null? estudiante) "The word isn't registered!")
      ((equal? codigo (list-ref estudiante 0)) (list (list-ref estudiante 1) (list-ref estudiante 2) (list-ref estudiante 3)))
      (else (buscar codigo (rest estudiante)))))
  (cond
    ((null? lista) "The word isn't registered!")
    (else (buscar palabra (car lista))))) 

(define (interfaz posicion lista-final)
  (displayln "What do you want to do?")
  (display "1) Register a word \n2) Search synonims by its word in the system")
  (define opc (read))
  (if (= opc 1)
      (registrar posicion lista-final)
      (if (= opc 2)
          (begin
            (display "Insert his code: ")
            (displayln (buscar-sinon (read) lista-final))
            (retorno posicion lista-final)
            )
          (begin
            (display "That's not an option, try again.")
            (interfaz posicion lista-final)
            )
          )
      )
  )
(define (retorno posicion lista-final)
  (displayln "Do you want to go back?")
  (displayln "1) Yes \n2) No")
  (define opc (read))
  (cond
    ((= opc 1)(interfaz posicion lista-final))
    ((= opc 2)(void))
    (else (display "That's not an option, try again")
          (retorno))
    )
  )
(interfaz 0 '())