#lang racket
(define num 1)
(define c 0)
(define den 0)
(displayln "Inserte x en la sucesión: (1/x) – (3/(x-2)) – (5/(x-4)) – (7/(x-6)) – (9/(x-8)) - (11/(x-10))...")
(define x (read))
(display "Inserte la cantidad de repeticiones de la sucesión que desee (tenga en cuenta que el primer valor es 0): ")
(define n (read))
(define (secuenc num den x n c)
  (if(= n c)
     (display (/ num (- x den)))
     (begin
       (display (/ num (- x den)))
       (display ", ")
       (set! num (+ num 2))
       (set! den (+ den 2))
       (set! c (+ c 1))
       (secuenc num den x n c)
       )
     )
  )
(secuenc num den x n c)