#lang racket
(define (interfaz)
  (display "Ingrese la cadena que desea que sea evaluada: ")
  (define cadena (read-line))
  (define vector-car (make-vector (string-length cadena) 0))
  (define vector-rep (make-vector (string-length cadena) 0))
  (llenador-de-caracteres cadena vector-car 0 0 0)
  (displayln vector-car)
  (display vector-rep)
  )
(define (llenador-de-caracteres cadena vector-car contador-inic posicion posicion-en-vec)
  (if (< contador-inic posicion)
      (llenador-de-caracteres cadena vector-car 0 (+ posicion 1) posicion-en-vec)
        (if (char=? (string-ref cadena contador-inic) (string-ref cadena posicion))
            (begin
              (vector-set! vector-car posicion-en-vec (string-ref cadena posicion))
              (llenador-de-caracteres cadena vector-car 0 posicion (+ posicion-en-vec 1))
              )
            (llenador-de-caracteres cadena vector-car (+ contador-inic 1) posicion posicion-en-vec)
            )
        )
      )
(interfaz)